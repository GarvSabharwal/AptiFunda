<% include ../header %>
<main style="padding-top:85px;">
        <!--Main layout-->
		
        <div class="container">

<!--Page heading-->
            
			<div class="row">
                <div class="col-md-12">
                    <h3 class="h3-responsive"> 
                        <small class="text-muted">Python --> 14. Object Oriented Programming in Python</small>
                    </h3>
					
					<ol class="breadcrumb">
						<li class="breadcrumb-item"><a href="/">Home</a></li>
						<li class="breadcrumb-item"><a href="/python">Pyhton</a></li>
						<li class="breadcrumb-item active">14.1. Classes and Objects</li>
					</ol>
				
                </div>
            </div>

            <div class="row">
                <!--First column-->
                <div class="col-md-3 unit-section">
                    <!--Card-->
                    <div class="card  z-depth-2">
					
					<!--Card Gradient-->
                        <div class="gradient" style="height:80px;padding-top:20px;">
									 Index
                            
                                <div class="mask"></div>
                            
                        </div>
                        <!--/.Card Gradient---->

                        <!--Card content-->
<div class="card-block pad" >
<div class="row ">
<div class="col-md-12">






 <p><a style="color:#356BC3;" href="/python/classes_and_objects" title="Classes and objects"><strong>14.1. Classes and objects</strong></a></p>
                        <p><a href="/python/methods" title="Methods">14.2. Methods</a></p>
						<p><a href="/python/python_memory_management" title="Python memory management">14.3. Python memory management</a></p>
						<p><a href="/python/principles_of_object_orientation" title="Principles of object orientation">14.4. Principles of object orientation</a></p>
						<p><a href="/python/problem_statement_8" title="Problem statement">14.5. Problem statement</a></p>
						<p><a href="/python/pp_13" title="Practise Problems">14.6. Practise Problems</a></p>

</div>

							
							
                            </div>
                        </div>
                        <!--/.Card content-->

                    </div>
                    <!--/.Card-->
                </div>
				<div class="col-md-9" >
				<div class="card  z-depth-2" >
				
				<div style="margin:10px 0px 0px 10px;">

                  <h3 class="h3-responsive"> 
                        <small class="text-muted"> 14.1. Classes and objects</small>
                    </h3>
				<hr>
                  <p>Object-oriented programming (OOP) is a programming paradigm that uses objects and their interactions to design applications and computer programs.</p>

<p>Before going into Object-oriented programming, let us discuss about programming paradigms available.<br>
There are three widely used programming paradigms. They are Procedural programming, functional programming and object-oriented programming. Python supports both procedural and object-oriented programming. There is some limited support for functional programming too.</p>

<p><strong>What is a class?</strong><br>
A class is used in object-oriented programming to describe one or more objects. It serves as a template for creating, or instantiating, specific objects(That have a&nbsp; particular behaviour) within a program. While each object is created from a single class, one class can be used to instantiate multiple objects.</p>

<p><strong>What is an object?</strong><br>
An object is instance of a class. Objects are the data abstraction that encapsulate internal abstraction.</p>

<p>Let us understand about classes and objects with a simple example,<br>
Consider Animal as a class then the objects of this class would be dog,cat,rat etc., That is collection of particular behaviour is a class and the physical object that shows this behaviour is an object.</p>

<p><strong>Class definition and object instantiation</strong></p>

<p>Class definition syntax:</p>

<p>class Subclass([superclass]):<br>
[attributes and methods]<br>
If there is no super class mention object in place of super class<br>
Example;<br>
class Customer(object):<br>
&nbsp;&nbsp; &nbsp;statements<br>
&nbsp;&nbsp; &nbsp;….<br>
&nbsp;&nbsp; &nbsp;….<br>
As usual indentation should be followed.<br>
Note:class name should start with capital letter.</p>

<p>Object instantiation syntax:</p>

<p>object = class()<br>
Example:<br>
customer1=Customer()<br>
customer2=Customer()</p>

<p>The class Customer(object) line does not create a new customer. That is, just because we've defined a Customer doesn't mean we've created one. we've merely outlined the blueprint to create a Customer object. Customer objects are created as shown in the example of object instantiation.</p>

              <div class="pull-right">
                    <a href="/python/methods" title="Methods"><span class="pull-right hidden-xs">Next <i class="fa fa-angle-right"></i> </span>    <div style="clear: right;" class="hidden-xs text-right">Methods</div> </a>
                    <a href="/python/methods" title="Methods"><div class="btn btn-primary btn- pull-right visible-xs">Next <i class="fa fa-angle-right"></i> </div></a>
                  </div>    
                     </div>   
					
                    </div>
             </div>
				
	
		</div>
</main>
<% include ../footer %>
